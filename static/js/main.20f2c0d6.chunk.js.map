{"version":3,"sources":["routes.js","config.js","utils/index.js","slices/teamsInfoSlice.js","slices/gamesInfoSlice.js","slices/index.js","components/Filter/FilterItems.js","components/Filter/index.js","components/ResultsTable.js","App.js","serviceWorker.js","index.js"],"names":["host","prefix","id","amount","join","date","options","params","timezone","headers","process","REACT_APP_API_KEY","compareActions","equal","realValue","filterValue","gt","lt","isFilterMatch","goals","missedGoals","filter","goalsCompare","missedGoalsCompare","isGoalsMatchFilter","action","isMissedGoalsMatchFilter","value","initialFilter","name","teamsInfoSlice","createSlice","initialState","filtredTeams","teamsFilters","requestState","reducers","addTeamsFilter","state","length","push","deleteLastTeamsFilter","pop","changeTeamsFilter","payload","paramName","index","newState","setTeamsStatsRequest","setTeamsStatsFailure","setTeamsStats","actions","CACHE","fetchTeamStat","team","teamId","Promise","resolve","stats","url","routes","axios","get","then","response","fixtures","data","api","catch","error","console","log","isTeamMatchFilters","every","filterParams","isCurrentSideHome","homeTeam","team_id","goalsHomeTeam","goalsAwayTeam","selectors","selectFiltredTeams","teamsInfo","map","league","country","selectTeamsFilters","selectTeamsFiltersLength","selectRequestState","gamesInfoSlice","gamesStats","gamesFilter","extraReducers","teamsActions","type","successfulStatuses","selectFiltredTeamsFromGames","gamesInfo","filtredTeamsIds","reduce","acc","gameStat","includes","statusShort","homeTeamId","homeTeamName","team_name","awayTeam","awayTeamId","awayTeamName","leagueName","ligueCountry","Object","values","gamesActions","setTeamsStatsAsync","teams","dispatch","getState","a","promises","allSettled","teamsWithExtendedStats","successResult","status","gamesSelectors","teamsSelectors","FilterItem","props","filterState","useDispatch","setNewFilterParameter","changeFilterValue","comparatorState","event","target","parsedValue","parseInt","Number","isNaN","changeFilterAction","resetParamIfNoValue","defaultValue","className","onChange","min","onBlur","Filter","useSelector","teamsFilterLength","onSubmit","e","preventDefault","FilterItems","disabled","role","aria-hidden","onClick","ResultsTable","i","App","formRequestState","Boolean","window","location","hostname","match","dir","rootElement","document","getElementById","currentDate","format","Date","serverOptions","Error","innerHTML","preloadedState","store","configureStore","reducer","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20f2c0d6.chunk.js","sourcesContent":["const host = 'https://v2.api-football.com';\nconst prefix = 'fixtures';\n\nexport default {\n  teamStatPath: (id, amount = 10) => [host, prefix, 'team', id, 'last', amount].join('/'),\n  dayStatPath: (date) => [host, prefix, 'date', date].join('/'),\n};\n","export const options = {\n  params: { timezone: 'Europe/Moscow' },\n  headers: {\n    'x-rapidapi-key': process.env.REACT_APP_API_KEY,\n    'x-rapidapi-host': 'https://v2.api-football.com/',\n  },\n};\n\nexport const maxFiltersAmount = 3;\n\nexport const filterDefaultValue = 0;\n","/* eslint-disable import/prefer-default-export */\n\nconst compareActions = {\n  equal: (realValue, filterValue) => realValue === filterValue,\n  gt: (realValue, filterValue) => realValue >= filterValue,\n  lt: (realValue, filterValue) => realValue <= filterValue,\n};\n\nexport const isFilterMatch = (goals, missedGoals, filter) => {\n  const {\n    goalsCompare,\n    missedGoalsCompare,\n  } = filter;\n\n  const isGoalsMatchFilter = compareActions[goalsCompare.action];\n  const isMissedGoalsMatchFilter = compareActions[missedGoalsCompare.action];\n\n  return (\n    isGoalsMatchFilter(goals, goalsCompare.value)\n    && isMissedGoalsMatchFilter(missedGoals, missedGoalsCompare.value)\n  );\n};\n","/* eslint-disable object-curly-newline */\n/* eslint-disable no-prototype-builtins */\nimport { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport routes from '../routes';\n// import teamTestData from './teamTestData';\nimport { maxFiltersAmount, options, filterDefaultValue } from '../config';\nimport { isFilterMatch } from '../utils';\n\nexport const initialFilter = {\n  goalsCompare: { action: 'equal', value: filterDefaultValue, name: 'goalsCompare' },\n  missedGoalsCompare: { action: 'equal', value: filterDefaultValue, name: 'missedGoalsCompare' },\n};\n\nexport const teamsInfoSlice = createSlice({\n  name: 'teamsInfo',\n  initialState: {\n    filtredTeams: [],\n    teamsFilters: [{ ...initialFilter }],\n    requestState: '',\n  },\n  reducers: {\n    addTeamsFilter: (state) => {\n      const { length } = state.teamsFilters;\n      if (length < maxFiltersAmount) {\n        state.teamsFilters.push({ ...initialFilter });\n      }\n    },\n    deleteLastTeamsFilter: (state) => {\n      const { length } = state.teamsFilters;\n      if (length > 1) {\n        state.teamsFilters.pop();\n      }\n    },\n    changeTeamsFilter: (state, action) => {\n      const { paramName, index, newState } = action.payload;\n\n      state.teamsFilters[index][paramName] = newState;\n    },\n    setTeamsStatsRequest: (state) => {\n      state.requestState = 'requested';\n    },\n    setTeamsStatsFailure: (state) => {\n      state.requestState = 'failured';\n    },\n    setTeamsStats: (state, action) => {\n      state.requestState = 'success';\n      state.filtredTeams = action.payload;\n    },\n  },\n});\n\nexport const { actions } = teamsInfoSlice;\n\nconst CACHE = {};\n\nconst fetchTeamStat = (team) => {\n  const { id: teamId } = team;\n\n  if (CACHE[teamId]) {\n    return Promise.resolve({ ...team, stats: CACHE[teamId] });\n  }\n  const url = routes.teamStatPath(teamId, maxFiltersAmount);\n  return axios.get(url, options)\n    .then((response) => {\n      const { fixtures } = response.data.api;\n      CACHE[teamId] = fixtures;\n      return { ...team, stats: fixtures };\n    })\n    .catch((error) => {\n      console.log(`ошибка при получении данных команды id: ${teamId}`);\n      console.error(error);\n      const response = { ...team, error };\n      return response;\n    });\n};\n\n// const getTestData = (team) => {\n//   const { id: teamId } = team;\n//   return new Promise((res, rej) => {\n//     if (teamId === 33) {\n//       res(teamTestData);\n//       return;\n//     }\n//     if (teamId % 2 === 0) {\n//       res(teamTestData);\n//     } else {\n//       rej(new Error({ id: teamId, error: 'some error ' }));\n//     }\n//   })\n//     .then((response) => {\n//       const { fixtures } = response.api;\n//       CACHE[teamId] = { ...team, stats: fixtures };\n//       return CACHE[teamId];\n//     })\n//     .catch((error) => {\n//       // console.log(`ошибка при получении данных команды id: ${teamId}`);\n//       // console.error(error);\n//       const response = { ...team, error };\n//       throw Error(response);\n//     });\n// };\n\nconst isTeamMatchFilters = (team, teamsFilters) => teamsFilters.every((filterParams, index) => {\n  const isCurrentSideHome = team.stats[index].homeTeam.team_id === team.id;\n  const { goalsHomeTeam, goalsAwayTeam } = team.stats[index];\n\n  if (isCurrentSideHome) {\n    return isFilterMatch(goalsHomeTeam, goalsAwayTeam, filterParams);\n  }\n\n  return isFilterMatch(goalsAwayTeam, goalsHomeTeam, filterParams);\n});\n\nexport const setTeamsStatsAsync = (teams) => async (dispatch, getState) => {\n  dispatch(actions.setTeamsStatsRequest());\n\n  try {\n    const promises = teams.map(fetchTeamStat);\n    const teamsWithExtendedStats = await Promise.allSettled(promises);\n    const { teamsFilters } = getState().teamsInfo;\n    const successResult = teamsWithExtendedStats\n      .filter(({ status }) => status === 'fulfilled')\n      .map(({ value }) => value)\n      .filter((team) => isTeamMatchFilters(team, teamsFilters));\n    dispatch(actions.setTeamsStats(successResult));\n  } catch (error) {\n    console.log('ошибка в сборке промиса');\n    console.error(error);\n    dispatch(actions.setTeamsStatsFailure());\n  }\n};\n\nexport const selectFiltredTeams = (state) => {\n  const { filtredTeams } = state.teamsInfo;\n  const result = filtredTeams.map(({ name, id, league, country }) => (\n    { name, id, league, country }\n  ));\n\n  return result;\n};\n\nexport const selectTeamsFilters = (state) => state.teamsInfo.teamsFilters;\n\nexport const selectTeamsFiltersLength = (state) => state.teamsInfo.teamsFilters.length;\n\nexport const selectRequestState = (state) => state.teamsInfo.requestState;\n\nexport const selectors = {\n  selectFiltredTeams,\n  selectTeamsFilters,\n  selectTeamsFiltersLength,\n  selectRequestState,\n};\n\nexport default teamsInfoSlice.reducer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport { actions as teamsActions } from './teamsInfoSlice';\nimport { isFilterMatch } from '../utils';\n\nexport const gamesInfoSlice = createSlice({\n  name: 'gamesInfo',\n  initialState: {\n    gamesStats: [],\n    gamesFilter: {},\n  },\n  extraReducers: {\n    [teamsActions.changeTeamsFilter.type]: (state, action) => {\n      const { paramName, index, newState } = action.payload;\n      if (index === 0) {\n        state.gamesFilter[paramName] = newState;\n      }\n    },\n  },\n});\n\nconst successfulStatuses = ['FT', 'AET', 'PEN'];\n\nexport const selectFiltredTeamsFromGames = (state) => {\n  const { gamesStats, gamesFilter } = state.gamesInfo;\n\n  const filtredTeamsIds = gamesStats.reduce((acc, gameStat) => {\n    if (!successfulStatuses.includes(gameStat.statusShort)) {\n      return acc;\n    }\n    const { goalsHomeTeam, goalsAwayTeam } = gameStat;\n\n    const {\n      homeTeam: { team_id: homeTeamId, team_name: homeTeamName },\n      awayTeam: { team_id: awayTeamId, team_name: awayTeamName },\n      league: { name: leagueName, country: ligueCountry },\n    } = gameStat;\n\n    if (isFilterMatch(goalsHomeTeam, goalsAwayTeam, gamesFilter)) {\n      acc[homeTeamId] = {\n        id: homeTeamId,\n        name: homeTeamName,\n        league: leagueName,\n        country: ligueCountry,\n        stats: gameStat,\n      };\n    }\n    if (isFilterMatch(goalsAwayTeam, goalsHomeTeam, gamesFilter)) {\n      acc[awayTeamId] = {\n        id: awayTeamId,\n        name: awayTeamName,\n        league: leagueName,\n        country: ligueCountry,\n        stats: gameStat,\n      };\n    }\n\n    return acc;\n  }, {});\n\n  return Object.values(filtredTeamsIds);\n};\n\n// export const selectGamesFilter = (state) => state.gamesInfo.gamesFilter;\n\nexport const { actions } = gamesInfoSlice;\n\nexport const selectors = {\n  selectFiltredTeamsFromGames,\n};\n\nexport default gamesInfoSlice.reducer;\n","import gamesInfo, { actions as gamesActions, selectors as gamesSelectors } from './gamesInfoSlice';\nimport teamsInfo, { actions as teamsActions, selectors as teamsSelectors, setTeamsStatsAsync } from './teamsInfoSlice';\n\nconst reducers = {\n  gamesInfo,\n  teamsInfo,\n};\n\nconst actions = {\n  ...gamesActions,\n  ...teamsActions,\n  setTeamsStatsAsync,\n};\n\nconst selectors = {\n  ...gamesSelectors,\n  ...teamsSelectors,\n};\n\nexport default reducers;\nexport { actions };\nexport { selectors };\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { actions } from '../../slices';\nimport { filterDefaultValue } from '../../config';\n\nconst FilterItem = (props) => {\n  const { filterState, index } = props;\n\n  const dispatch = useDispatch();\n\n  const {\n    goalsCompare,\n    missedGoalsCompare,\n  } = filterState;\n\n  const setNewFilterParameter = (newState) => {\n    const data = {\n      newState,\n      paramName: newState.name,\n      index,\n    };\n\n    dispatch(actions.changeTeamsFilter(data));\n  };\n\n  const changeFilterValue = (comparatorState) => (event) => {\n    let { value } = event.target;\n\n    const parsedValue = parseInt(value, 10);\n\n    if (!Number.isNaN(parsedValue)) {\n      value = parsedValue;\n    }\n    const newState = { ...comparatorState, value };\n\n    setNewFilterParameter(newState);\n  };\n\n  const changeFilterAction = (comparatorState) => (event) => {\n    const newState = { ...comparatorState, action: event.target.value };\n\n    setNewFilterParameter(newState);\n  };\n\n  const resetParamIfNoValue = (comparatorState, defaultValue) => (event) => {\n    if (!event.target.value) {\n      const newState = { ...comparatorState, value: defaultValue };\n      setNewFilterParameter(newState);\n    }\n  };\n\n  return (\n    <div className=\"row flex-nowrap mb-2\">\n      <div className=\"col-1 mr-3 d-flex align-items-center\">\n        <span className=\"\">{-index}</span>\n      </div>\n      <div className=\"col d-flex flex-nowrap p-0 mr-2\">\n        <select\n          className=\"custom-select col-7\"\n          value={goalsCompare.action}\n          onChange={changeFilterAction(goalsCompare)}\n        >\n          <option value=\"equal\">=</option>\n          <option value=\"gt\">&gt;=</option>\n          <option value=\"lt\">&lt;=</option>\n        </select>\n        <input\n          type=\"number\"\n          className=\"form-control col-5\"\n          min={0}\n          value={goalsCompare.value}\n          onChange={changeFilterValue(goalsCompare)}\n          onBlur={resetParamIfNoValue(goalsCompare, filterDefaultValue)}\n        />\n      </div>\n      <div className=\"col d-flex flex-nowrap p-0\">\n        <select\n          className=\"custom-select col-7\"\n          value={missedGoalsCompare.action}\n          onChange={changeFilterAction(missedGoalsCompare)}\n        >\n          <option value=\"equal\">=</option>\n          <option value=\"gt\">&gt;=</option>\n          <option value=\"lt\">&lt;=</option>\n        </select>\n        <input\n          type=\"number\"\n          className=\"form-control col-5\"\n          min=\"0\"\n          value={missedGoalsCompare.value}\n          onChange={changeFilterValue(missedGoalsCompare)}\n          onBlur={resetParamIfNoValue(missedGoalsCompare, filterDefaultValue)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FilterItem;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectors, actions } from '../../slices';\n\nimport FilterItems from './FilterItems';\n\nconst Filter = () => {\n  const teamsFilters = useSelector(selectors.selectTeamsFilters);\n  const filtredTeams = useSelector(selectors.selectFiltredTeamsFromGames);\n  const teamsFilterLength = useSelector(selectors.selectTeamsFiltersLength);\n  const requestState = useSelector(selectors.selectRequestState);\n\n  const dispatch = useDispatch();\n\n  const addFilter = () => dispatch(actions.addTeamsFilter());\n  const deleteFilter = () => dispatch(actions.deleteLastTeamsFilter());\n\n  const processTeamsFilters = (e) => {\n    e.preventDefault();\n\n    if (teamsFilterLength === 1) {\n      dispatch(actions.setTeamsStats(filtredTeams));\n    } else {\n      dispatch(actions.setTeamsStatsAsync(filtredTeams));\n    }\n  };\n\n  return (\n    <form className=\"container-fluid\" onSubmit={processTeamsFilters}>\n      <div className=\"row mb-2 flex-nowrap\">\n        <div className=\"col-1 mr-3\">\n          <span className=\"p-0\">№</span>\n        </div>\n        <div className=\"col mr-2 m-0 p-0\">\n          <span className=\"p-0\">Забито</span>\n        </div>\n        <div className=\"col m-0 p-0\">\n          <span className=\"p-0\">Пропущено</span>\n        </div>\n      </div>\n      {teamsFilters.map((filterState, index) => (\n        <FilterItems key={index} filterState={filterState} index={index} />))}\n      <div className=\"row mt-3 flex-nowrap justify-content-between\">\n        <div>\n          <button\n            className=\"btn btn-primary\"\n            type=\"submit\"\n            disabled={requestState === 'requested'}\n          >\n            {requestState === 'requested' && (\n            <span\n              className=\"spinner-border spinner-border-sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            />\n            )}\n            Найти\n          </button>\n        </div>\n        <div>\n          <div className=\"d-flex flex-nowrap\">\n            <button\n              className=\"btn btn-outline-primary p-1\"\n              type=\"button\"\n              onClick={addFilter}\n            >\n              +\n            </button>\n            <button\n              className=\"btn btn-outline-primary p-1 ml-2\"\n              type=\"button\"\n              onClick={deleteFilter}\n            >\n              &minus;\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectors } from '../slices';\n\nconst ResultsTable = () => {\n  const filtredTeams = useSelector(selectors.selectFiltredTeams);\n\n  return (\n    <table className=\"table table-borderless\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>Команда</th>\n          <th>Лига</th>\n          <th>Страна</th>\n        </tr>\n      </thead>\n      <tbody>\n        {filtredTeams.map((team, i) => (\n          <tr key={team.id}>\n            <td>{i + 1}</td>\n            <td>{team.name}</td>\n            <td>{team.league}</td>\n            <td>{team.country}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ResultsTable;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectors } from './slices';\n// import './App.css';\n\nimport Filter from './components/Filter';\nimport ResultsTable from './components/ResultsTable';\n\nconst App = () => {\n  const formRequestState = useSelector(selectors.selectRequestState);\n\n  return (\n    <div className=\"container-md pt-5 d-flex flex-wrap\">\n      <div className=\"mb-5 col col-sm-5\">\n        <Filter />\n      </div>\n      {formRequestState === 'success' && (\n        <div className=\"col col-sm-7\">\n          <ResultsTable />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport { Provider } from 'react-redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { format } from 'date-fns';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './slices';\nimport { initialFilter } from './slices/teamsInfoSlice';\nimport routes from './routes';\nimport { options as serverOptions } from './config';\n// import data from './test_data_20-12-07';\n\n(async () => {\n  console.dir(process.env);\n  const rootElement = document.getElementById('root');\n\n  const currentDate = format(new Date(), 'yyyy-MM-dd');\n  const url = routes.dayStatPath(currentDate);\n\n  let data;\n\n  try {\n    const response = await axios.get(url, serverOptions);\n    data = response.data;\n    const { error } = data.api;\n    if (error) {\n      throw Error(error);\n    }\n  } catch (error) {\n    console.error(error);\n    rootElement.innerHTML = `<h3 class=\"p-3\">Cервер статистики недоступен, попробуйте перезагрузить страницу.<br> При повторной ошибке обратитесь в техподдержку.</h3 ><div class=\"m-3\">${error}</div>`;\n    return;\n  }\n\n  const preloadedState = {\n    gamesInfo: {\n      gamesStats: data.api.fixtures,\n      gamesFilter: initialFilter,\n    },\n    teamsInfo: {\n      filtredTeams: [],\n      teamsFilters: [initialFilter],\n      requestState: '',\n    },\n  };\n\n  const store = configureStore({\n    reducer,\n    preloadedState,\n  });\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    rootElement,\n  );\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n})();\n"],"sourceRoot":""}